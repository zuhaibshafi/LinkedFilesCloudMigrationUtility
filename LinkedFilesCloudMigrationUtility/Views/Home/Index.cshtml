@model LinkedFilesCloudMigrationUtility.Models.LogIn

@{
    ViewBag.Title = "Index";
}
<div class="container row" style="margin: 2%;">
    <div class=" col-sm-6 col-sm-offset-3">
        <div class="panel panel-primary">
            <div class="panel-heading">BQE</div>
            <div class="panel-body">
                @using (Html.BeginForm("ConnectSQL", "Home", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.ServerName, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.ServerName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ServerName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-offset-3 col-md-9">
                            @Html.ValidationMessage("Error", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9">
                                <input type="submit" value="Connect" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }

                @{
                    if (ViewBag.DBlist != null && ViewBag.DBlist.Count > 0)
                    {
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(model => model.Source, new SelectList(ViewBag.DBlist, "dbname"), "Select", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Files, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-3 col-md-9">
                                            <input type="submit" value="Upload" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </div>
                    }
                }



            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
